---
- name: Create self-signed certificate and configure route
  hosts: localhost
  tasks:
    - name: Generate private key
      openssl_privatekey:
        path: /tmp/private.key
        type: RSA
        size: 2048

    - name: Generate self-signed certificate
      openssl_certificate:
        path: /tmp/cert.crt
        privatekey_path: /tmp/private.key
        provider:
          subject:
            CN: rocket-chat-rocketchat.apps.rogerocp1.demoredhat.com
        selfsigned: true

    - name: Create TLS secret
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Secret
          metadata:
            name: rocket-chat-tls
          type: kubernetes.io/tls
          data:
            tls.crt: "{{ lookup('file', '/tmp/cert.crt') | b64encode }}"
            tls.key: "{{ lookup('file', '/tmp/private.key') | b64encode }}"

    - name: Create ClusterIssuer
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: ClusterIssuer
          metadata:
            name: letsencrypt
          spec:
            acme:
              email: demo@myexample.com
              preferredChain: ""
              privateKeySecretRef:
                name: letsencrypt-account-key
              server: https://acme-v02.api.letsencrypt.org/directory
              solvers:
              - http01:
                  ingress:
                    class: nginx

    - name: Create certificate
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: cert-manager.io/v1
          kind: Certificate
          metadata:
            name: rocket-chat-tls
            namespace: rocketchat
          spec:
            dnsNames:
            - rocket-chat-rocketchat.apps.rogerocp1.demoredhat.com
            issuerRef:
              kind: ClusterIssuer
              name: letsencrypt
            secretName: rocket-chat-tls

    - name: Update route
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: route.openshift.io/v1
          kind: Route
          metadata:
            name: rocket-chat
            namespace: rocketchat
          spec:
            host: rocket-chat-rocketchat.apps.rogerocp1.demoredhat.com
            to:
              kind: Service
              name: rocket-chat
            port:
              targetPort: 3000
            tls:
              termination: edge
              insecureEdgeTerminationPolicy: Redirect
              certificate:
                secretName: rocket-chat-tls
          status: {}

