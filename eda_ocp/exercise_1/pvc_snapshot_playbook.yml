---
- name: Ansible Playbook for PVC and VolumeSnapshot
  hosts: localhost
  connection: local
  gather_facts: yes
  collections:
    - community.general
  tasks:
    - name: Block to handle PVC and VolumeSnapshot
      block:
        - name: Wait for Persistent Volume Claim to be Bound
          kubernetes.core.k8s_info:
            kind: PersistentVolumeClaim
            namespace: "{{ ansible_eda.event.resource.metadata.namespace }}"
            name: "{{ ansible_eda.event.resource.metadata.name }}"
          register: pvc_status
          until: pvc_status.resources | default([]) | length > 0 and pvc_status.resources[0].status.phase == "Bound"
          retries: 5
          delay: 10

        - name: Create VolumeSnapshot
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: snapshot.storage.k8s.io/v1
              kind: VolumeSnapshot
              metadata:
                name: "{{ ansible_eda.event.resource.metadata.name }}-snapshot-{{ ansible_date_time.date }}"
                namespace: "{{ ansible_eda.event.resource.metadata.namespace }}"
              spec:
                source:
                  persistentVolumeClaimName: "{{ ansible_eda.event.resource.metadata.name }}"
          when: pvc_status.resources[0].status.phase == "Bound"

      rescue:

        - name: event debug
          ansible.builtin.debug:
            var: pvc_status

        - name: Debug status
          ansible.builtin.debug:
            msg: "{{ pvc_status.resources[0].status.phase }}"

        - name: Handle PVC not Bound
          ansible.builtin.debug:
            msg: "Status 'Bound' was never achieved for the Persistent Volume Claim {{ ansible_eda.event.resource.metadata.name }}"

    - name: Get VolumeSnapshot details
      kubernetes.core.k8s_info:
        api_version: snapshot.storage.k8s.io/v1
        kind: VolumeSnapshot
        namespace: "{{ ansible_eda.event.resource.metadata.namespace }}"
      register: volumesnapshot_details

    - name: Debug message for VolumeSnapshot name and namespace
      ansible.builtin.debug:
        msg: "Name: {{ item.name }}, Namespace: {{ item.namespace }}"
      loop: "{{ volumesnapshot_details | community.general.json_query('resources[*].metadata') }}"
      loop_control:
        label: "Name: {{ item.name }}, Namespace: {{ item.namespace }}"
